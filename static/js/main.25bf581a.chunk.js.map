{"version":3,"sources":["components/InputFullSalary/InputFullSalary.js","helpers/salary.js","helpers/formatNumbers.js","components/InputReadOnly/InputDiscountINSS.js","components/InputReadOnly/InputBaseIRPF.js","components/InputReadOnly/InputDiscountIRPF.js","components/InputReadOnly/InputNetSalary.js","components/InputReadOnly/InputBaseINSS.js","components/tables/TableContributionINSS.js","components/tables/TableDiscountIRRF.js","App.js","index.js","components/InputReadOnly/InputReadOnly.module.css"],"names":["InputFullSalary","handleInputChange","event","newValue","target","value","props","changeInput","currentValue","this","autoFocus","type","onChange","defaultValue","min","step","Component","INSS_TABLE","id","minValue","maxValue","difference","discountPercentage","discountValue","round","toFixed","calculateSalaryFrom","fullSalary","baseINSS","discountINSS","i","length","currentItem","calculateDiscountINSS","baseIRPF","discountIRPF","calculateDiscountIRPF","netSalary","formatter","Intl","NumberFormat","formatNumber","format","InputDiscountINSS","changeValue","percent","formattedValue","className","css","readOnly","InputBaseIRPF","inputRead","InputDiscountIRPF","InputNetSalary","InputBaseInss","TableContributionINSS","scope","TableDiscountIRRF","App","handleChangeSalary","newSalary","setState","totalValue","state","style","textAlign","flex","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.25bf581a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class InputFullSalary extends Component {\r\n  handleInputChange = (event) => {\r\n    const newValue = event.target.value;\r\n    this.props.changeInput(newValue);\r\n  };\r\n\r\n  render() {\r\n    const { currentValue } = this.props;\r\n    return (\r\n      <div>\r\n        <label>Sal√°rio bruto:</label>\r\n        <input\r\n          autoFocus\r\n          type=\"number\"\r\n          onChange={this.handleInputChange}\r\n          value={currentValue}\r\n          defaultValue=\"1000\"\r\n          min=\"1000\"\r\n          step=\"100\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Fonte: https://www.todacarreira.com/calculo-salario-liquido/\r\n\r\nconst INSS_TABLE = [\r\n  {\r\n    id: 1,\r\n    minValue: 0,\r\n    maxValue: 1045,\r\n    difference: 1045 - 0,\r\n    discountPercentage: 0.075,\r\n    discountValue: -1,\r\n  },\r\n  {\r\n    id: 2,\r\n    minValue: 1045.01,\r\n    maxValue: 2089.6,\r\n    difference: 2089.6 - 1045,\r\n    discountPercentage: 0.09,\r\n  },\r\n  {\r\n    id: 3,\r\n    minValue: 2089.61,\r\n    maxValue: 3134.4,\r\n    difference: 3134.4 - 2089.6,\r\n    discountPercentage: 0.12,\r\n  },\r\n  {\r\n    id: 4,\r\n    minValue: 3134.41,\r\n    maxValue: 6101.06,\r\n    difference: 6101.06 - 3134.4,\r\n    discountPercentage: 0.14,\r\n  },\r\n];\r\n\r\nfunction round(value) {\r\n  return +value.toFixed(2);\r\n}\r\n\r\nfunction calculateDiscountINSS(baseINSS) {\r\n  let discountINSS = 0;\r\n\r\n  if (baseINSS > 6101.06) {\r\n    return 713.1;\r\n  }\r\n\r\n  for (var i = 0; i < INSS_TABLE.length; i++) {\r\n    var currentItem = INSS_TABLE[i];\r\n    let discountValue = 0;\r\n\r\n    if (baseINSS > currentItem.maxValue) {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round(currentItem.difference * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n    } else {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n      break;\r\n    }\r\n  }\r\n\r\n  discountINSS = round(discountINSS);\r\n\r\n  return discountINSS;\r\n}\r\n\r\nfunction calculateDiscountIRPF(baseIRPF) {\r\n  let discountIRPF =\r\n    baseIRPF < 1903.98\r\n      ? 0\r\n      : baseIRPF < 2826.65\r\n      ? round(baseIRPF * 0.075) - 142.8\r\n      : baseIRPF < 3751.05\r\n      ? round(baseIRPF * 0.15) - 354.8\r\n      : baseIRPF < 4664.68\r\n      ? round(baseIRPF * 0.225) - 636.13\r\n      : round(baseIRPF * 0.275) - 869.36;\r\n\r\n  discountIRPF = round(discountIRPF);\r\n\r\n  return discountIRPF;\r\n}\r\n\r\nfunction calculateSalaryFrom(fullSalary) {\r\n  const baseINSS = fullSalary;\r\n  const discountINSS = calculateDiscountINSS(baseINSS);\r\n\r\n  const baseIRPF = baseINSS - discountINSS;\r\n  const discountIRPF = calculateDiscountIRPF(baseIRPF);\r\n\r\n  const netSalary = baseINSS - discountINSS - discountIRPF;\r\n\r\n  return {\r\n    baseINSS,\r\n    discountINSS,\r\n    baseIRPF,\r\n    discountIRPF,\r\n    netSalary,\r\n  };\r\n}\r\n\r\nexport { calculateSalaryFrom, round };\r\n","const formatter = Intl.NumberFormat('pt-BR');\r\n\r\nfunction formatNumber(value) {\r\n  return formatter.format(value);\r\n}\r\n\r\nexport { formatNumber };\r\n","import React, { Component } from 'react';\r\nimport { round } from '../../helpers/salary';\r\nimport { formatNumber } from '../../helpers/formatNumbers';\r\nimport css from './InputReadOnly.module.css';\r\n\r\nexport default class InputDiscountINSS extends Component {\r\n  render() {\r\n    const { changeValue, percent } = this.props;\r\n    const formattedValue = `${formatNumber(changeValue)} (${round(percent)}%)`;\r\n    return (\r\n      <div className={css.discountINSS}>\r\n        <label>Desconto INSS:</label>\r\n        <input type=\"text\" value={formattedValue} readOnly />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { formatNumber } from '../../helpers/formatNumbers';\r\nimport css from './InputReadOnly.module.css';\r\n\r\nexport default class InputBaseIRPF extends Component {\r\n  render() {\r\n    const { changeValue } = this.props;\r\n    return (\r\n      <div className={css.inputRead}>\r\n        <label>Base IRPF:</label>\r\n        <input type=\"text\" value={formatNumber(changeValue)} readOnly />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { round } from '../../helpers/salary';\r\nimport { formatNumber } from '../../helpers/formatNumbers';\r\nimport css from './InputReadOnly.module.css';\r\n\r\nexport default class InputDiscountIRPF extends Component {\r\n  render() {\r\n    const { changeValue, percent } = this.props;\r\n    const formattedValue = `${formatNumber(changeValue)} (${round(percent)}%)`;\r\n    return (\r\n      <div className={css.discountIRPF}>\r\n        <label>Desconto IRPF:</label>\r\n        <input type=\"text\" value={formattedValue} readOnly />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { round } from '../../helpers/salary';\r\nimport { formatNumber } from '../../helpers/formatNumbers';\r\nimport css from './InputReadOnly.module.css';\r\n\r\nexport default class InputNetSalary extends Component {\r\n  render() {\r\n    const { changeValue, percent } = this.props;\r\n    const formattedValue = `${formatNumber(changeValue)} (${round(percent)}%)`;\r\n    return (\r\n      <div className={css.netSalary}>\r\n        <label>Sal√°rio liquido:</label>\r\n        <input type=\"text\" value={formattedValue} readOnly />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { formatNumber } from '../../helpers/formatNumbers';\r\nimport css from './InputReadOnly.module.css';\r\n\r\nexport default class InputBaseInss extends Component {\r\n  render() {\r\n    const { changeValue } = this.props;\r\n    return (\r\n      <div className={css.inputRead}>\r\n        <label>Base INSS:</label>\r\n        <input type=\"text\" value={formatNumber(changeValue)} readOnly />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './table.css';\r\n\r\nexport default class TableContributionINSS extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"tables\">\r\n        <h4>Descontar o INSS do sal√°rio bruto:</h4>\r\n        <p>\r\n          O INSS √© descontado para que, futuramente, se torne sua aposentadoria,\r\n          ou caso venha a ser demitido, servir√° como base para o pagamento do\r\n          seguro-desemprego.\r\n          <br />\r\n          <br />\r\n          Seu c√°lculo √© feito pelo sal√°rio bruto multiplicado por uma\r\n          porcentagem, e este valor ser√° destinado √† previd√™ncia social. A\r\n          al√≠quota descontada depende do valor do sal√°rio:\r\n        </p>\r\n        <table className=\"table-normal\">\r\n          <caption>Tabela de contribui√ß√£o INSS 2020</caption>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Sal√°rio de contribui√ß√£o</th>\r\n              <th scope=\"col\">Al√≠quota</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Sal√°rio m√≠nimo: R$ 1.045,00</td>\r\n              <td>7,5%</td>\r\n            </tr>\r\n            <tr>\r\n              <td>De R$ 1.045,01 a R$ 2.089,60</td>\r\n              <td>9%</td>\r\n            </tr>\r\n            <tr>\r\n              <td>De R$ 2.089,61 a R$ 3.134,40</td>\r\n              <td>12%</td>\r\n            </tr>\r\n            <tr>\r\n              <td>De R$ 3.134,41 a R$ 6.101,06</td>\r\n              <td>14%</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './table.css';\r\n\r\nexport default class TableDiscountIRRF extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"tables\">\r\n        <h4>Descontar o imposto de renda retido na fonte</h4>\r\n        <p>\r\n          Ap√≥s o desconto feito para a previd√™ncia social √© poss√≠vel saber\r\n          quanto se deve destinar ao imposto de renda. Este imposto √© retido da\r\n          fonte, ou seja, √© descontado diretamente pelo empregador e entregue √†\r\n          Receita Federal.\r\n          <br />\r\n          <br />\r\n          Para isso, existe uma tabela de IRRF (imposto de renda retido na\r\n          fonte) que mostram as porcentagens de descontos para cada valor de\r\n          sal√°rio bruto sem o INSS, que atualmente √© a seguinte:\r\n        </p>\r\n        <table className=\"table-normal\">\r\n          <caption>Tabela de descontos ao IRRF</caption>\r\n          <thead>\r\n            <tr>\r\n              <th>Base de c√°lculo (R$)</th>\r\n              <th>Al√≠quota (%)</th>\r\n              <th>Parcela dedut√≠vel (R$)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>At√© 1.903,98</td>\r\n              <td>0%</td>\r\n              <td>0,00</td>\r\n            </tr>\r\n            <tr>\r\n              <td>De 1.903,99 at√© 2.826,65</td>\r\n              <td>7,5%</td>\r\n              <td>142,80</td>\r\n            </tr>\r\n            <tr>\r\n              <td>De 2.826,66 at√© 3.751,05</td>\r\n              <td>15%</td>\r\n              <td>354,80</td>\r\n            </tr>\r\n            <tr>\r\n              <td>De 3.751,06 at√© 4.664,68</td>\r\n              <td>22,5%</td>\r\n              <td>636,13</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Acima de 4.664,69</td>\r\n              <td>27,5%</td>\r\n              <td>869,36</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport InputFullSalary from './components/InputFullSalary/InputFullSalary';\r\nimport { calculateSalaryFrom } from './helpers/salary';\r\nimport InputDiscountINSS from './components/InputReadOnly/InputDiscountINSS';\r\nimport InputBaseIRPF from './components/InputReadOnly/InputBaseIRPF';\r\nimport InputDiscountIRPF from './components/InputReadOnly/InputDiscountIRPF';\r\nimport InputNetSalary from './components/InputReadOnly/InputNetSalary';\r\nimport './App.css';\r\nimport InputBaseINSS from './components/InputReadOnly/InputBaseINSS';\r\nimport TableContributionINSS from './components/tables/TableContributionINSS';\r\nimport TableDiscountIRRF from './components/tables/TableDiscountIRRF';\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fullSalary: 1000,\r\n    };\r\n  }\r\n\r\n  handleChangeSalary = (newSalary) => {\r\n    this.setState({ fullSalary: newSalary });\r\n  };\r\n\r\n  percent = (currentValue, totalValue) => {\r\n    const resultPercent = (currentValue / totalValue) * 100;\r\n    return resultPercent;\r\n  };\r\n\r\n  render() {\r\n    const { fullSalary } = this.state;\r\n    const {\r\n      baseINSS,\r\n      discountINSS,\r\n      baseIRPF,\r\n      discountIRPF,\r\n      netSalary,\r\n    } = calculateSalaryFrom(fullSalary);\r\n    return (\r\n      <div className=\"containerGeral\">\r\n        <h1 style={{ textAlign: 'center' }}>React Salario</h1>\r\n        <InputFullSalary\r\n          currentValue={fullSalary}\r\n          changeInput={this.handleChangeSalary}\r\n        />\r\n\r\n        <div className=\"containerInputs\">\r\n          <InputBaseINSS changeValue={baseINSS} />\r\n          <InputDiscountINSS\r\n            changeValue={discountINSS}\r\n            percent={this.percent(discountINSS, baseINSS)}\r\n          />\r\n          <InputBaseIRPF changeValue={baseIRPF} />\r\n          <InputDiscountIRPF\r\n            changeValue={discountIRPF}\r\n            percent={this.percent(discountIRPF, baseIRPF)}\r\n          />\r\n          <InputNetSalary\r\n            changeValue={netSalary}\r\n            percent={(netSalary / baseINSS) * 100}\r\n          />\r\n        </div>\r\n        <div className=\"barContainer\">\r\n          <div\r\n            className=\"orange\"\r\n            style={{ flex: `${this.percent(discountINSS, baseINSS)}%` }}\r\n          ></div>\r\n          <div\r\n            className=\"red\"\r\n            style={{ flex: `${this.percent(discountIRPF, baseIRPF)}%` }}\r\n          ></div>\r\n          <div\r\n            className=\"green\"\r\n            style={{ flex: `${this.percent(netSalary, baseINSS)}%` }}\r\n          ></div>\r\n        </div>\r\n        <TableContributionINSS />\r\n        <TableDiscountIRRF />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'materialize-css/dist/css/materialize.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputRead\":\"InputReadOnly_inputRead__Yzpi_\",\"discountINSS\":\"InputReadOnly_discountINSS__oO4sa\",\"discountIRPF\":\"InputReadOnly_discountIRPF__1J-SA\",\"netSalary\":\"InputReadOnly_netSalary__1_Skp\"};"],"sourceRoot":""}